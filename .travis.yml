os: linux 
dist: bionic # Ubuntu 18

language: c

env:
  - DOCKER_CLI_EXPERIMENTAL=enabled  # Needed to enable experimental features in the CLI, like --platform and buildx

services:
  - docker

# requires that commit is for a PR or is on master branch
if: (type = pull_request) OR (type = push AND branch = master)

jobs:
  include:
    - name: format
      arch: amd64
      script:
        - ./runtime format -r . # Runs clang-format checker to see if code is formatted properly

    - name: test
      arch: arm64 
      before_script:
        - echo '{"experimental":true}' | sudo tee /etc/docker/daemon.json   # Need to enable experimental features in the Docker daemon to choose platform. For some reason, only enabling the features in the CLI doesn't work.
        - sudo service docker restart
      script:
        - docker build --platform linux/arm/v7 -t $DOCKER_REPO:test -f docker/Dockerfile ./  # Build new image with updated code for arm32v7
        - docker run -t $DOCKER_REPO:test ./runtime test int # Runs the integration tests in a new container

    - name: push
      arch: amd64
      if: type = push AND branch = master  # Build and push to latest only if this is a master commit
      before_script:
        # Need to install updated version of Docker 19.03 to get experimental features for buildx, from https://www.docker.com/blog/multi-arch-build-what-about-travis/
        - sudo rm -rf /var/lib/apt/lists/*
        - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) edge"
        - sudo apt-get update
        - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce
      script:
        # DOCKER_USERNAME and DOCKER_ACCESS_TOKEN are defined as a repository secret environment variable on travis-ci.org
        - echo "$DOCKER_ACCESS_TOKEN" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes  # Need to install QEMU to emulate ARM architectures
        - docker buildx create --use
        - docker buildx build --platform linux/amd64,linux/arm/v7 -t $DOCKER_REPO:$TAG --build-arg BUILDKIT_INLINE_CACHE=1 --push -f docker/Dockerfile ./
